# Python program to reverse a linked list in group of given size 
from collections import deque
  
# Node class  
class Node: 
  
	# Constructor to initialize the node object 
	def __init__(self, data): 
		self.data = data 
		self.next = None
  
class LinkedList: 
	# Function to initialize head 
	def __init__(self): 
		self.head = None

	def push (self, e) :
		l = Node(e)
		l.next = self.head
		self.head = l

	def reverse(self, head,  g) :
		
		next = None
		prev = None
		cur = head
		k = 0
		while (cur != None and k < g) :	
			next = cur.next
			cur.next = prev
			prev = cur
			cur = next
			k += 1
	
			
		if next != None :
			head.next = self.reverse(next, g) 		

		return prev
		

			
	def printList (self) :
		n = self.head 
		while n :
			print(n.data)
			n = n.next
			
		

# Driver program 
llist = LinkedList() 
llist.push(9) 
llist.push(8) 
llist.push(7) 
llist.push(6) 
llist.push(5) 
llist.push(4) 
llist.push(3) 
llist.push(2) 
llist.push(1) 
  
print ("Given linked list")
llist.printList() 
llist.head = llist.reverse(llist.head, 3) 
  
print ("\nReversed Linked list")
llist.printList() 
  
